#pragma once

#include <fstream>
#include <memory>
#include <string>
#include <vector>

#include "winnt.h"

namespace PE_FILE_NS {

class PEFile {
public:
  PEFile(const std::string_view fileName);

  std::shared_ptr<IMAGE_SECTION_HEADER> getSection(const DWORD virtualAddress);

  DWORD getPhysicalAddress(const DWORD virtualAddress);

private:
  std::shared_ptr<IMAGE_DOS_HEADER> m_dosHeader;

  std::shared_ptr<IMAGE_NT_HEADERS32> m_ntHeader;

  std::shared_ptr<IMAGE_FILE_HEADER> m_fileHeader;

  std::shared_ptr<IMAGE_OPTIONAL_HEADER32> m_optionalHeader;

  DWORD m_imageBase;

  std::vector<std::shared_ptr<IMAGE_SECTION_HEADER>> m_sectionHeaders;
};

} // namespace PE_FILE_NS